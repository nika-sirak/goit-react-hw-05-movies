{"version":3,"file":"static/js/530.2f1f3549.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchBox/SearchBox.module.css?45fa","components/SearchBox/SearchBox.jsx","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"movieListItem\":\"MoviesList_movieListItem__pwpnH\",\"movieListLink\":\"MoviesList_movieListLink__uHraS\",\"movieListImg\":\"MoviesList_movieListImg__4Luk2\",\"movieListTitle\":\"MoviesList_movieListTitle__DH1EE\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { BASE_URL } from 'services/moviesAPI';\nimport defaultPoster from '../../images/defaultPoster.jpg';\nimport s from './MoviesList.module.css';\n\nfunction MoviesList({ moviesArr }) {\n  const location = useLocation();\n\n  return (\n    <ul className={s.movieList}>\n      {moviesArr.map(\n        ({ id, poster_path, title, original_title, original_name }) => (\n          <li key={id} className={s.movieListItem}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={s.movieListLink}\n            >\n              <img\n                src={poster_path ? `${BASE_URL}${poster_path}` : defaultPoster}\n                alt={title}\n                className={s.movieListImg}\n              />\n              <h2 className={s.movieListTitle}>\n                {original_title ?? original_name}\n              </h2>\n            </Link>\n          </li>\n        )\n      )}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      original_title: PropTypes.string,\n      original_name: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"SearchBox_search__2nHcS\",\"searchTerm\":\"SearchBox_searchTerm__IUFsT\",\"searchButton\":\"SearchBox_searchButton__TKWda\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './SearchBox.module.css';\n\nfunction SearchBox({ onSubmit }) {\n  const [movieName, setMovieName] = useState('');\n\n  const handleMovieChange = e => {\n    setMovieName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (movieName.trim() === '') {\n      return toast.warning('Please, add some movie');\n    }\n\n    onSubmit(movieName);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setMovieName('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.search}>\n      <input\n        type=\"text\"\n        value={movieName}\n        autoComplete=\"off\"\n        autoFocus\n        onChange={handleMovieChange}\n        placeholder=\"Movie title\"\n        className={s.searchTerm}\n      ></input>\n      <button type=\"submit\" className={s.searchButton}>\n        Search\n      </button>\n    </form>\n  );\n}\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBox;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviePageSection\":\"MoviesPage_moviePageSection__cKNC8\",\"error\":\"MoviesPage_error__GMgXr\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovieByQuery } from '../../services/moviesAPI';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport s from './MoviesPage.module.css';\n\nfunction MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSearchBox = name => {\n    setSearchParams({ query: name });\n  };\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n\n    const fetchMoviesByQuery = async () => {\n      setLoading(true);\n\n      try {\n        const { results } = await fetchSearchMovieByQuery(query);\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMoviesByQuery();\n  }, [query]);\n\n  return (\n    <section className={s.moviePageSection}>\n      <SearchBox onSubmit={handleSearchBox} />\n      {loading && <Loader />}\n      {movies && <MoviesList moviesArr={movies} />}\n      {error && <p className={s.error}>{error.message}</p>}\n    </section>\n  );\n}\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w300/';\n\nconst KEY = '0b8103dd54def1b2724a61ab95182ae5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovieByQuery = async queryName => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${queryName}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["moviesArr","location","useLocation","className","s","map","id","poster_path","title","original_title","original_name","to","state","from","src","BASE_URL","defaultPoster","alt","onSubmit","useState","movieName","setMovieName","resetForm","e","preventDefault","trim","toast","type","value","autoComplete","autoFocus","onChange","currentTarget","toLowerCase","placeholder","movies","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMoviesByQuery","fetchSearchMovieByQuery","results","name","Loader","MoviesList","message","KEY","axios","fetchTrendMovies","response","data","fetchMovieById","movieId","queryName","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}