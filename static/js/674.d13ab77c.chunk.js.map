{"version":3,"file":"static/js/674.d13ab77c.chunk.js","mappings":"iNACA,EAA4B,8BAA5B,EAA0E,kCAA1E,EAA4H,kCAA5H,EAA6K,iCAA7K,EAA+N,mC,SC8C/N,MAzCA,YAAoC,IAAdA,EAAa,EAAbA,UACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAUK,KACT,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,eAAgBC,EAA3C,EAA2CA,cAA3C,OACE,eAAaP,UAAWC,EAAxB,UACE,UAAC,KAAD,CACEO,GAAE,kBAAaL,GACfM,MAAO,CAAEC,KAAMZ,GACfE,UAAWC,EAHb,WAKE,gBACEU,IAAKP,EAAW,UAAMQ,EAAAA,IAAN,OAAiBR,GAAgBS,EACjDC,IAAKT,EACLL,UAAWC,KAEb,eAAID,UAAWC,EAAf,gBACGK,QADH,IACGA,EAAAA,EAAkBC,QAZhBJ,U,mJCZnB,EAA2B,2BAA3B,EAAsE,gC,SCmCtE,MA9BA,WACE,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,6FAClBJ,GAAW,GADO,mBAGUK,EAAAA,EAAAA,MAHV,uBAGRC,EAHQ,EAGRA,QAHQ,kBAITR,EAAUQ,IAJD,gCAMhBJ,EAAS,EAAD,IANQ,yBAQhBF,GAAW,GARK,4EAAH,qDAWjBI,MACC,KAGD,qBAASvB,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,4BACCiB,IAAW,SAACQ,EAAA,EAAD,IACXN,IAAS,uBAAIA,EAAMO,WAClBP,IAAS,SAACQ,EAAA,EAAD,CAAY/B,UAAWmB,S,iOC7B3BJ,EAAW,mCAElBiB,EAAM,mCACZC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMN,EAAgB,mCAAG,sGACPM,IAAAA,IAAA,sCAAyCD,IADlC,uBACtBE,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLH,IAAAA,IAAA,iBACXG,EADW,oBACQJ,EADR,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdG,EAAuB,mCAAG,WAAMC,GAAN,yFACdL,IAAAA,IAAA,gCACID,EADJ,iCACgCM,EADhC,gCADc,uBAC7BJ,EAD6B,EAC7BA,KAD6B,kBAI9BA,GAJ8B,2CAAH,sDAOvBK,EAAc,mCAAG,WAAMH,GAAN,yFACLH,IAAAA,IAAA,iBACXG,EADW,4BACgBJ,EADhB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMJ,GAAN,yFACRH,IAAAA,IAAA,iBACXG,EADW,4BACgBJ,EADhB,2BADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAIxBA,GAJwB,2CAAH,uD","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\",\"movieListItem\":\"MoviesList_movieListItem__pwpnH\",\"movieListLink\":\"MoviesList_movieListLink__uHraS\",\"movieListImg\":\"MoviesList_movieListImg__4Luk2\",\"movieListTitle\":\"MoviesList_movieListTitle__DH1EE\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { BASE_URL } from 'services/moviesAPI';\nimport defaultPoster from '../../images/defaultPoster.jpg';\nimport s from './MoviesList.module.css';\n\nfunction MoviesList({ moviesArr }) {\n  const location = useLocation();\n\n  return (\n    <ul className={s.movieList}>\n      {moviesArr.map(\n        ({ id, poster_path, title, original_title, original_name }) => (\n          <li key={id} className={s.movieListItem}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={s.movieListLink}\n            >\n              <img\n                src={poster_path ? `${BASE_URL}${poster_path}` : defaultPoster}\n                alt={title}\n                className={s.movieListImg}\n              />\n              <h2 className={s.movieListTitle}>\n                {original_title ?? original_name}\n              </h2>\n            </Link>\n          </li>\n        )\n      )}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      original_title: PropTypes.string,\n      original_name: PropTypes.string,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"homePage\":\"HomePage_homePage__GDK2b\",\"homePageTitle\":\"HomePage_homePageTitle__RKF0E\"};","import { useState, useEffect } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport { fetchTrendMovies } from '../../services/moviesAPI';\nimport s from './HomePage.module.css';\n\nfunction HomePage() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const { results } = await fetchTrendMovies();\n        return setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <section className={s.homePage}>\n      <h1 className={s.homePageTitle}>Trending today</h1>\n      {loading && <Loader />}\n      {error && <p>{error.message}</p>}\n      {!error && <MoviesList moviesArr={movies} />}\n    </section>\n  );\n}\n\nexport default HomePage;\n","import axios from 'axios';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w300/';\n\nconst KEY = '0b8103dd54def1b2724a61ab95182ae5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchSearchMovieByQuery = async queryName => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&language=en-US&query=${queryName}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["moviesArr","location","useLocation","className","s","map","id","poster_path","title","original_title","original_name","to","state","from","src","BASE_URL","defaultPoster","alt","useState","movies","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","fetchTrendMovies","results","Loader","message","MoviesList","KEY","axios","data","fetchMovieById","movieId","fetchSearchMovieByQuery","queryName","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}