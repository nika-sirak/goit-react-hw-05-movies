{"version":3,"file":"static/js/474.531183ee.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/moviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieCardContainer\":\"MovieCard_movieCardContainer__octe8\",\"movieCardDesc\":\"MovieCard_movieCardDesc__vnvGE\",\"movieGenres\":\"MovieCard_movieGenres__ux446\",\"movieCardTitle\":\"MovieCard_movieCardTitle__EpyYN\"};","import PropTypes from 'prop-types';\nimport { BASE_URL } from 'services/moviesAPI';\nimport s from './MovieCard.module.css';\n\nfunction MovieCard({ movie }) {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n\n  return (\n    <div className={s.movieCardContainer}>\n      <img\n        className={s.movieCardImg}\n        src={`${BASE_URL}${poster_path}`}\n        alt={title}\n        width=\"300\"\n      />\n\n      <div className={s.movieCardDesc}>\n        <h2 className={s.movieCardTitle}>\n          {title}({release_date.slice(0, 4)})\n        </h2>\n        <p>User score: {vote_average * 10}%</p>\n        <h3 className={s.movieCardTitle}>Overview</h3>\n        <p>{overview}</p>\n        <h3 className={s.movieCardTitle}>Genres</h3>\n        <ul className={s.movieGenres}>\n          {genres.map(({ id, name }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n\nexport default MovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieCard\":\"MovieDetailsPage_movieCard__BMoxK\",\"movieCardBtn\":\"MovieDetailsPage_movieCardBtn__TuMVa\",\"movieEdition\":\"MovieDetailsPage_movieEdition__9-NTy\",\"movieEditionList\":\"MovieDetailsPage_movieEditionList__yG4Hh\",\"movieEditionTitle\":\"MovieDetailsPage_movieEditionTitle__S123G\",\"movieEditionLink\":\"MovieDetailsPage_movieEditionLink__cehiz\",\"activeLink\":\"MovieDetailsPage_activeLink__XM0zo\"};","import {\n  useParams,\n  useLocation,\n  NavLink,\n  Link,\n  Outlet,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { AiFillCaretLeft } from 'react-icons/ai';\nimport { fetchMovieById } from '../../services/moviesAPI';\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport s from './MovieDetailsPage.module.css';\n\nfunction MovieDetailsPage() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      try {\n        const result = await fetchMovieById(movieId);\n        setMovie(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <section className={s.movieCard}>\n      <Link to={backLinkHref} className={s.movieCardBtn}>\n        <AiFillCaretLeft size=\"12\" fill=\"#ffffff\" />\n        Back to movies\n      </Link>\n      {loading && <Loader />}\n      {error && <p>{error.message}</p>}\n      {movie && <MovieCard movie={movie} />}\n\n      {!error && (\n        <div className={s.movieEdition}>\n          <h3 className={s.movieEditionTitle}>Additional information</h3>\n          <ul className={s.movieEditionList}>\n            <li>\n              {movie && (\n                <NavLink\n                  to=\"cast\"\n                  state={{ from: location?.state?.from }}\n                  className={navData =>\n                    navData.isActive ? s.activeLink : s.movieEditionLink\n                  }\n                >\n                  Cast\n                </NavLink>\n              )}\n            </li>\n            <li>\n              {movie && (\n                <NavLink\n                  to=\"reviews\"\n                  state={{ from: location?.state?.from }}\n                  className={navData =>\n                    navData.isActive ? s.activeLink : s.movieEditionLink\n                  }\n                >\n                  Reviews\n                </NavLink>\n              )}\n            </li>\n          </ul>\n          <Suspense fallback={<Loader />}>\n            <Outlet movieeId={movieId} />\n          </Suspense>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w300/';\n\nconst KEY = '0b8103dd54def1b2724a61ab95182ae5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchSearchMovieByQuery = async queryName => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${KEY}&language=en-US&query=${queryName}&page=1&include_adult=false`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n"],"names":["movie","poster_path","title","release_date","vote_average","overview","genres","className","s","src","BASE_URL","alt","width","slice","map","id","name","movieId","useParams","location","useLocation","useState","setMovie","loading","setLoading","error","setError","backLinkHref","state","from","useEffect","fetchMovieDetails","fetchMovieById","result","to","size","fill","Loader","message","navData","isActive","Suspense","fallback","movieeId","KEY","axios","fetchTrendMovies","data","fetchSearchMovieByQuery","queryName","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}